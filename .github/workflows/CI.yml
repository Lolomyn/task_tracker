name: Django CI

on: [ push, pull_request ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SetUp Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: pip install Poetry

      - name: Install flake8
        run: poetry add --group dev flake8

      - name: Run flake8
        run: poetry run flake8 .

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SetUp Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root

      - name: Run tests
        env:
          SECRET_KEY: ${{secrets.DJANGO_SECRET_KEY}}
        run: python manage.py test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/my_app:${{ github.sha }} .

      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my_app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Sync changed files
        run: |
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.env' \
            --exclude='docker-compose.yml' \
            --exclude='venv' \
            --exclude='__pycache__' \
            --exclude='staticfiles' \
            --exclude='media' \
            --exclude='postgres_data' \
            --exclude='redis_data' \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_DIR }}/

      - name: Restart Docker services
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            cd ${{ secrets.DEPLOY_DIR }}
            sudo docker-compose up -d --no-deps --build web
            sudo docker-compose exec web python manage.py migrate --noinput
            sudo docker-compose exec nginx nginx -s reload
          EOF
